package vault.managers.net{		import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.StatusEvent;	import flash.net.URLRequest;		import air.net.URLMonitor;
	public class NetworkManager	{		public static const AVAILABLE:String = "AVAILABLE";		public static const UNAVAILABLE:String = "UNAVAILABLE";				private static var _urlRequest:URLRequest;		private static var _urlMonitor:air.net.URLMonitor;				private static var _status:EventDispatcher;				public function NetworkManager()		{		}				public static function init():void		{			_urlRequest = new URLRequest( "http://google.com" );			_urlMonitor = new URLMonitor( _urlRequest );			_status = new EventDispatcher();		}				private static function networkStatusChanged(e:StatusEvent):void		{			if( e.code == "Service.available" )				_status.dispatchEvent( new Event( AVAILABLE ) );			else				_status.dispatchEvent( new Event( UNAVAILABLE ) );		}				public static function start():void
		{			_urlMonitor.start();			_urlMonitor.addEventListener( StatusEvent.STATUS, networkStatusChanged );
		}				public static function stop():void		{			_urlMonitor.stop();			_urlMonitor.removeEventListener( StatusEvent.STATUS, networkStatusChanged );		}
				public static function get status():EventDispatcher		{			return _status;		}	}}